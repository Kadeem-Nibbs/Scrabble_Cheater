{"dependencies":[{"name":"./_Symbol","loc":{"line":1,"column":21}},{"name":"./isArguments","loc":{"line":2,"column":26}},{"name":"./isArray","loc":{"line":3,"column":22}}],"generated":{"js":"var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n"},"hash":"387c0da86b6f8b2fee095c08c2c50839"}