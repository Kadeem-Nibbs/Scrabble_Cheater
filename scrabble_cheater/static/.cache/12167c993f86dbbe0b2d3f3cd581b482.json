{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"lodash/without","loc":{"line":11,"column":24}},{"name":"lodash/map","loc":{"line":15,"column":20}},{"name":"classnames","loc":{"line":19,"column":26}},{"name":"prop-types","loc":{"line":23,"column":25}},{"name":"react","loc":{"line":27,"column":21}},{"name":"../../lib","loc":{"line":31,"column":19}},{"name":"./Statistic","loc":{"line":33,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Statistic = require('./Statistic');\n\nvar _Statistic2 = _interopRequireDefault(_Statistic);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A group of statistics.\n */\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n\n  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useWidthProp)(widths), 'statistics', className);\n  var rest = (0, _lib.getUnhandledProps)(StatisticGroup, props);\n  var ElementType = (0, _lib.getElementType)(StatisticGroup, props);\n\n  if (!_lib.childrenUtils.isNil(children)) return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), children);\n  if (!_lib.childrenUtils.isNil(content)) return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), content);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), (0, _map3.default)(items, function (item) {\n    return _Statistic2.default.create(item);\n  }));\n}\n\nStatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'content', 'horizontal', 'inverted', 'items', 'size', 'widths'];\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: _lib.META.TYPES.VIEW,\n  parent: 'Statistic'\n};\n\nStatisticGroup.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: _propTypes2.default.bool,\n\n  /** Array of props for Statistic. */\n  items: _lib.customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)\n} : {};\n\nexports.default = StatisticGroup;"},"hash":"883b529fbcf490e2ad73037b717fbaff"}