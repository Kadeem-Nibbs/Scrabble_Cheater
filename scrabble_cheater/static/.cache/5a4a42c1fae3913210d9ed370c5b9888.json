{"dependencies":[{"name":"babel-runtime/helpers/typeof","loc":{"line":8,"column":23}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberToWordMap = undefined;\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nexports.numberToWord = numberToWord;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar numberToWordMap = exports.numberToWordMap = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n  13: 'thirteen',\n  14: 'fourteen',\n  15: 'fifteen',\n  16: 'sixteen'\n\n  /**\n   * Return the number word for numbers 1-16.\n   * Returns strings or numbers as is if there is no corresponding word.\n   * Returns an empty string if value is not a string or number.\n   * @param {string|number} value The value to convert to a word.\n   * @returns {string}\n   */\n};function numberToWord(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);\n  if (type === 'string' || type === 'number') {\n    return numberToWordMap[value] || value;\n  }\n\n  return '';\n}"},"hash":"523de60adea83984c52200b63e4f66f5"}