{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"lodash/without","loc":{"line":11,"column":24}},{"name":"classnames","loc":{"line":15,"column":26}},{"name":"prop-types","loc":{"line":19,"column":25}},{"name":"react","loc":{"line":23,"column":21}},{"name":"../../lib","loc":{"line":27,"column":19}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A group of segments can be formatted to appear together.\n */\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n\n  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(stacked, 'stacked'), 'segments', className);\n  var rest = (0, _lib.getUnhandledProps)(SegmentGroup, props);\n  var ElementType = (0, _lib.getElementType)(SegmentGroup, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), _lib.childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = ['as', 'children', 'className', 'compact', 'content', 'horizontal', 'piled', 'raised', 'size', 'stacked'];\nSegmentGroup._meta = {\n  name: 'SegmentGroup',\n  parent: 'Segment',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nSegmentGroup.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: _propTypes2.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: _propTypes2.default.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: _propTypes2.default.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: _propTypes2.default.bool,\n\n  /** A segment group can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: _propTypes2.default.bool\n} : {};\n\nexports.default = SegmentGroup;"},"hash":"751ce11c5fc56363e438003f273e2315"}