{"dependencies":[{"name":"./_arrayMap","loc":{"line":1,"column":23}},{"name":"./_baseIteratee","loc":{"line":2,"column":27}},{"name":"./_baseMap","loc":{"line":3,"column":22}},{"name":"./_baseSortBy","loc":{"line":4,"column":25}},{"name":"./_baseUnary","loc":{"line":5,"column":24}},{"name":"./_compareMultiple","loc":{"line":6,"column":30}},{"name":"./identity","loc":{"line":7,"column":23}}],"generated":{"js":"var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n"},"hash":"e0674894017df765f901d7ea915b7baf"}