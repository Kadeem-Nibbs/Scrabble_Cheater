{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":11,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":15,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":19,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":23,"column":25}},{"name":"lodash/includes","loc":{"line":27,"column":25}},{"name":"lodash/get","loc":{"line":31,"column":20}},{"name":"lodash/invoke","loc":{"line":35,"column":23}},{"name":"classnames","loc":{"line":39,"column":26}},{"name":"prop-types","loc":{"line":43,"column":25}},{"name":"react","loc":{"line":47,"column":21}},{"name":"../../lib","loc":{"line":49,"column":19}},{"name":"./TransitionGroup","loc":{"line":51,"column":31}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _includes2 = require('lodash/includes');\n\nvar _includes3 = _interopRequireDefault(_includes2);\n\nvar _get2 = require('lodash/get');\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _lib = require('../../lib');\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar TRANSITION_TYPE = {\n  ENTERING: 'show',\n  EXITING: 'hide'\n\n  /**\n   * A transition is an animation usually used to move content in or out of view.\n   */\n};\nvar Transition = function (_Component) {\n  (0, _inherits3.default)(Transition, _Component);\n\n  function Transition() {\n    var _ref;\n\n    (0, _classCallCheck3.default)(this, Transition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Transition.__proto__ || Object.getPrototypeOf(Transition)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var _this$computeInitialS = _this.computeInitialStatuses(),\n        status = _this$computeInitialS.initial,\n        next = _this$computeInitialS.next;\n\n    _this.nextStatus = next;\n    _this.state = { status: status };\n    return _this;\n  }\n\n  // ----------------------------------------\n  // Lifecycle\n  // ----------------------------------------\n\n  (0, _createClass3.default)(Transition, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n\n      this.mounted = true;\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _computeStatuses = this.computeStatuses(nextProps),\n          status = _computeStatuses.current,\n          next = _computeStatuses.next;\n\n      this.nextStatus = next;\n      if (status) this.setSafeState({ status: status });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n\n      this.mounted = false;\n    }\n\n    // ----------------------------------------\n    // Callback handling\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Helpers\n    // ----------------------------------------\n\n  }, {\n    key: 'render',\n\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n\n    value: function render() {\n      var children = this.props.children;\n      var status = this.state.status;\n\n      if (status === Transition.UNMOUNTED) return null;\n      return (0, _react.cloneElement)(children, {\n        className: this.computeClasses(),\n        style: this.computeStyle()\n      });\n    }\n  }]);\n  return Transition;\n}(_react.Component);\n\nTransition.defaultProps = {\n  animation: 'fade',\n  duration: 500,\n  visible: true,\n  mountOnShow: true,\n  transitionOnMount: false,\n  unmountOnHide: false\n};\nTransition._meta = {\n  name: 'Transition',\n  type: _lib.META.TYPES.MODULE\n};\nTransition.ENTERED = 'ENTERED';\nTransition.ENTERING = 'ENTERING';\nTransition.EXITED = 'EXITED';\nTransition.EXITING = 'EXITING';\nTransition.UNMOUNTED = 'UNMOUNTED';\nTransition.Group = _TransitionGroup2.default;\nTransition.handledProps = ['animation', 'children', 'duration', 'mountOnShow', 'onComplete', 'onHide', 'onShow', 'onStart', 'reactKey', 'transitionOnMount', 'unmountOnHide', 'visible'];\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleStart = function () {\n    var duration = _this2.props.duration;\n\n    var status = _this2.nextStatus;\n\n    _this2.nextStatus = null;\n    _this2.setSafeState({ status: status, animating: true }, function () {\n      (0, _invoke3.default)(_this2.props, 'onStart', null, (0, _extends3.default)({}, _this2.props, { status: status }));\n      setTimeout(_this2.handleComplete, (0, _lib.normalizeTransitionDuration)(duration, 'show'));\n    });\n  };\n\n  this.handleComplete = function () {\n    var current = _this2.state.status;\n\n    (0, _invoke3.default)(_this2.props, 'onComplete', null, (0, _extends3.default)({}, _this2.props, { status: current }));\n\n    if (_this2.nextStatus) {\n      _this2.handleStart();\n      return;\n    }\n\n    var status = _this2.computeCompletedStatus();\n    var callback = current === Transition.ENTERING ? 'onShow' : 'onHide';\n\n    _this2.setSafeState({ status: status, animating: false }, function () {\n      (0, _invoke3.default)(_this2.props, callback, null, (0, _extends3.default)({}, _this2.props, { status: status }));\n    });\n  };\n\n  this.updateStatus = function () {\n    var animating = _this2.state.animating;\n\n    if (_this2.nextStatus) {\n      _this2.nextStatus = _this2.computeNextStatus();\n      if (!animating) _this2.handleStart();\n    }\n  };\n\n  this.computeClasses = function () {\n    var _props = _this2.props,\n        animation = _props.animation,\n        children = _props.children;\n    var _state = _this2.state,\n        animating = _state.animating,\n        status = _state.status;\n\n    var childClasses = (0, _get3.default)(children, 'props.className');\n    var directional = (0, _includes3.default)(_lib.SUI.DIRECTIONAL_TRANSITIONS, animation);\n\n    if (directional) {\n      return (0, _classnames2.default)(animation, childClasses, (0, _lib.useKeyOnly)(animating, 'animating'), (0, _lib.useKeyOnly)(status === Transition.ENTERING, 'in'), (0, _lib.useKeyOnly)(status === Transition.EXITING, 'out'), (0, _lib.useKeyOnly)(status === Transition.EXITED, 'hidden'), (0, _lib.useKeyOnly)(status !== Transition.EXITED, 'visible'), 'transition');\n    }\n\n    return (0, _classnames2.default)(animation, childClasses, (0, _lib.useKeyOnly)(animating, 'animating transition'));\n  };\n\n  this.computeCompletedStatus = function () {\n    var unmountOnHide = _this2.props.unmountOnHide;\n    var status = _this2.state.status;\n\n    if (status === Transition.ENTERING) return Transition.ENTERED;\n    return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;\n  };\n\n  this.computeInitialStatuses = function () {\n    var _props2 = _this2.props,\n        visible = _props2.visible,\n        mountOnShow = _props2.mountOnShow,\n        transitionOnMount = _props2.transitionOnMount,\n        unmountOnHide = _props2.unmountOnHide;\n\n    if (visible) {\n      if (transitionOnMount) {\n        return {\n          initial: Transition.EXITED,\n          next: Transition.ENTERING\n        };\n      }\n      return { initial: Transition.ENTERED };\n    }\n\n    if (mountOnShow || unmountOnHide) return { initial: Transition.UNMOUNTED };\n    return { initial: Transition.EXITED };\n  };\n\n  this.computeNextStatus = function () {\n    var _state2 = _this2.state,\n        animating = _state2.animating,\n        status = _state2.status;\n\n    if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;\n    return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;\n  };\n\n  this.computeStatuses = function (props) {\n    var status = _this2.state.status;\n    var visible = props.visible;\n\n    if (visible) {\n      return {\n        current: status === Transition.UNMOUNTED && Transition.EXITED,\n        next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING\n      };\n    }\n\n    return {\n      next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING\n    };\n  };\n\n  this.computeStyle = function () {\n    var _props3 = _this2.props,\n        children = _props3.children,\n        duration = _props3.duration;\n    var status = _this2.state.status;\n\n    var childStyle = (0, _get3.default)(children, 'props.style');\n    var type = TRANSITION_TYPE[status];\n    var animationDuration = type && (0, _lib.normalizeTransitionDuration)(duration, type) + 'ms';\n\n    return (0, _extends3.default)({}, childStyle, { animationDuration: animationDuration });\n  };\n\n  this.setSafeState = function () {\n    return _this2.mounted && _this2.setState.apply(_this2, arguments);\n  };\n};\n\nexports.default = Transition;\nTransition.propTypes = \"development\" !== \"production\" ? {\n  /** Named animation event to used. Must be defined in CSS. */\n  animation: _propTypes2.default.oneOf(_lib.SUI.TRANSITIONS),\n\n  /** Primary content. */\n  children: _propTypes2.default.element.isRequired,\n\n  /** Duration of the CSS transition animation in milliseconds. */\n  duration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({\n    hide: _propTypes2.default.number,\n    show: _propTypes2.default.number\n  }), _propTypes2.default.string]),\n\n  /** Show the component; triggers the enter or exit animation. */\n  visible: _propTypes2.default.bool,\n\n  /** Wait until the first \"enter\" transition to mount the component (add it to the DOM). */\n  mountOnShow: _propTypes2.default.bool,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onComplete: _propTypes2.default.func,\n\n  /**\n   * Callback on each transition that changes visibility to hidden.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onHide: _propTypes2.default.func,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onShow: _propTypes2.default.func,\n\n  /**\n   * Callback on animation start.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onStart: _propTypes2.default.func,\n\n  /** React's key of the element. */\n  reactKey: _propTypes2.default.string,\n\n  /** Run the enter animation when the component mounts, if it is initially shown. */\n  transitionOnMount: _propTypes2.default.bool,\n\n  /** Unmount the component (remove it from the DOM) when it is not shown. */\n  unmountOnHide: _propTypes2.default.bool\n} : {};"},"hash":"98514567aef477ff860d8c94e1ff8d7c"}