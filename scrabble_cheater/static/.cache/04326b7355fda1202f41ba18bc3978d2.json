{"dependencies":[{"name":"babel-runtime/helpers/toConsumableArray","loc":{"line":7,"column":34}},{"name":"babel-runtime/helpers/extends","loc":{"line":11,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":15,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":19,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":23,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":27,"column":25}},{"name":"lodash/invoke","loc":{"line":31,"column":23}},{"name":"lodash/isNil","loc":{"line":35,"column":22}},{"name":"classnames","loc":{"line":39,"column":26}},{"name":"prop-types","loc":{"line":43,"column":25}},{"name":"react","loc":{"line":47,"column":21}},{"name":"../../lib","loc":{"line":51,"column":19}},{"name":"../Icon/Icon","loc":{"line":53,"column":20}},{"name":"../Label/Label","loc":{"line":57,"column":21}},{"name":"./ButtonContent","loc":{"line":61,"column":29}},{"name":"./ButtonGroup","loc":{"line":65,"column":27}},{"name":"./ButtonOr","loc":{"line":69,"column":24}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Label = require('../Label/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _ButtonContent = require('./ButtonContent');\n\nvar _ButtonContent2 = _interopRequireDefault(_ButtonContent);\n\nvar _ButtonGroup = require('./ButtonGroup');\n\nvar _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);\n\nvar _ButtonOr = require('./ButtonOr');\n\nvar _ButtonOr2 = _interopRequireDefault(_ButtonOr);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\nvar Button = function (_Component) {\n  (0, _inherits3.default)(Button, _Component);\n\n  function Button() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Button);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Button.__proto__ || Object.getPrototypeOf(Button)).call.apply(_ref, [this].concat(args))), _this), _this.computeElementType = function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n\n      if (!(0, _isNil3.default)(attached) || !(0, _isNil3.default)(label)) return 'div';\n    }, _this.computeTabIndex = function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n\n      if (!(0, _isNil3.default)(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    }, _this.focus = function () {\n      return (0, _invoke3.default)(_this.ref, 'focus');\n    }, _this.handleClick = function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      (0, _invoke3.default)(_this.props, 'onClick', e, _this.props);\n    }, _this.handleRef = function (c) {\n      return _this.ref = c;\n    }, _this.hasIconClass = function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n\n      if (icon === true) return true;\n      return icon && (labelPosition || _lib.childrenUtils.isNil(children) && (0, _isNil3.default)(content));\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Button, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          active = _props.active,\n          animated = _props.animated,\n          attached = _props.attached,\n          basic = _props.basic,\n          children = _props.children,\n          circular = _props.circular,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          content = _props.content,\n          disabled = _props.disabled,\n          floated = _props.floated,\n          fluid = _props.fluid,\n          icon = _props.icon,\n          inverted = _props.inverted,\n          label = _props.label,\n          labelPosition = _props.labelPosition,\n          loading = _props.loading,\n          negative = _props.negative,\n          positive = _props.positive,\n          primary = _props.primary,\n          secondary = _props.secondary,\n          size = _props.size,\n          toggle = _props.toggle;\n\n      var baseClasses = (0, _classnames2.default)(color, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(this.hasIconClass(), 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOrValueAndKey)(animated, 'animated'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'));\n      var labeledClasses = (0, _classnames2.default)((0, _lib.useKeyOrValueAndKey)(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = (0, _classnames2.default)((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useValueAndKey)(floated, 'floated'));\n\n      var rest = (0, _lib.getUnhandledProps)(Button, this.props);\n      var ElementType = (0, _lib.getElementType)(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!(0, _isNil3.default)(label)) {\n        var buttonClasses = (0, _classnames2.default)('ui', baseClasses, 'button', className);\n        var containerClasses = (0, _classnames2.default)('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = _Label2.default.create(label, { defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          } });\n\n        return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: containerClasses, onClick: this.handleClick }), labelPosition === 'left' && labelElement, _react2.default.createElement('button', { className: buttonClasses, disabled: disabled, ref: this.handleRef, tabIndex: tabIndex }, _Icon2.default.create(icon), ' ', content), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = (0, _classnames2.default)('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !_lib.childrenUtils.isNil(children);\n\n      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, {\n        className: classes,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        ref: this.handleRef,\n        role: 'button',\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && _Icon2.default.create(icon), !hasChildren && content);\n    }\n  }]);\n  return Button;\n}(_react.Component);\n\nButton.defaultProps = {\n  as: 'button'\n};\nButton._meta = {\n  name: 'Button',\n  type: _lib.META.TYPES.ELEMENT\n};\nButton.Content = _ButtonContent2.default;\nButton.Group = _ButtonGroup2.default;\nButton.Or = _ButtonOr2.default;\nButton.handledProps = ['active', 'animated', 'as', 'attached', 'basic', 'children', 'circular', 'className', 'color', 'compact', 'content', 'disabled', 'floated', 'fluid', 'icon', 'inverted', 'label', 'labelPosition', 'loading', 'negative', 'onClick', 'positive', 'primary', 'secondary', 'size', 'tabIndex', 'toggle'];\nButton.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: _propTypes2.default.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _lib.customPropTypes.every([_propTypes2.default.node, _lib.customPropTypes.disallow(['label']), _lib.customPropTypes.givenProps({\n    icon: _propTypes2.default.oneOfType([_propTypes2.default.string.isRequired, _propTypes2.default.object.isRequired, _propTypes2.default.element.isRequired])\n  }, _lib.customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A button can have different colors */\n  color: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: _propTypes2.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: _propTypes2.default.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: _lib.customPropTypes.some([_propTypes2.default.bool, _propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: _lib.customPropTypes.some([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: _propTypes2.default.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: _propTypes2.default.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: _propTypes2.default.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: _propTypes2.default.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: _propTypes2.default.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: _propTypes2.default.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: _propTypes2.default.bool,\n\n  /** A button can have different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: _propTypes2.default.bool\n} : {};\n\nButton.create = (0, _lib.createShorthandFactory)(Button, function (value) {\n  return { content: value };\n});\n\nexports.default = Button;"},"hash":"a2a4f588136452b0172a7796d29539d7"}