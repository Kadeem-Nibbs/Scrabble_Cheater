{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"lodash/isNil","loc":{"line":11,"column":22}},{"name":"classnames","loc":{"line":15,"column":26}},{"name":"prop-types","loc":{"line":19,"column":25}},{"name":"react","loc":{"line":23,"column":21}},{"name":"../../lib","loc":{"line":27,"column":19}},{"name":"../../modules/Dimmer","loc":{"line":29,"column":22}},{"name":"../Label/Label","loc":{"line":33,"column":21}},{"name":"./ImageGroup","loc":{"line":37,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Dimmer = require('../../modules/Dimmer');\n\nvar _Dimmer2 = _interopRequireDefault(_Dimmer);\n\nvar _Label = require('../Label/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nvar _ImageGroup = require('./ImageGroup');\n\nvar _ImageGroup2 = _interopRequireDefault(_ImageGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * An image is a graphic representation of something.\n * @see Icon\n */\nfunction Image(props) {\n  var alt = props.alt,\n      avatar = props.avatar,\n      bordered = props.bordered,\n      centered = props.centered,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      content = props.content,\n      dimmer = props.dimmer,\n      disabled = props.disabled,\n      floated = props.floated,\n      fluid = props.fluid,\n      height = props.height,\n      hidden = props.hidden,\n      href = props.href,\n      inline = props.inline,\n      label = props.label,\n      rounded = props.rounded,\n      size = props.size,\n      spaced = props.spaced,\n      src = props.src,\n      verticalAlign = props.verticalAlign,\n      width = props.width,\n      wrapped = props.wrapped,\n      ui = props.ui;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ui, 'ui'), size, (0, _lib.useKeyOnly)(avatar, 'avatar'), (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(rounded, 'rounded'), (0, _lib.useKeyOrValueAndKey)(spaced, 'spaced'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign, 'aligned'), 'image', className);\n  var rest = (0, _lib.getUnhandledProps)(Image, props);\n  var ElementType = (0, _lib.getElementType)(Image, props, function () {\n    if (!(0, _isNil3.default)(dimmer) || !(0, _isNil3.default)(label) || !(0, _isNil3.default)(wrapped) || !_lib.childrenUtils.isNil(children)) return 'div';\n  });\n\n  if (!_lib.childrenUtils.isNil(children)) {\n    return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), children);\n  }\n  if (!_lib.childrenUtils.isNil(content)) {\n    return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), content);\n  }\n\n  var rootProps = (0, _extends3.default)({}, rest, { className: classes });\n  var imgTagProps = { alt: alt, src: src, height: height, width: width };\n\n  if (ElementType === 'img') return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rootProps, imgTagProps));\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rootProps, { href: href }), _Dimmer2.default.create(dimmer), _Label2.default.create(label), _react2.default.createElement('img', imgTagProps));\n}\n\nImage.handledProps = ['alt', 'as', 'avatar', 'bordered', 'centered', 'children', 'circular', 'className', 'content', 'dimmer', 'disabled', 'floated', 'fluid', 'height', 'hidden', 'href', 'inline', 'label', 'rounded', 'size', 'spaced', 'src', 'ui', 'verticalAlign', 'width', 'wrapped'];\nImage.Group = _ImageGroup2.default;\n\nImage._meta = {\n  name: 'Image',\n  type: _lib.META.TYPES.ELEMENT\n};\n\nImage.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Alternate text for the image specified. */\n  alt: _propTypes2.default.string,\n\n  /** An image may be formatted to appear inline with text as an avatar. */\n  avatar: _propTypes2.default.bool,\n\n  /** An image may include a border to emphasize the edges of white or transparent content. */\n  bordered: _propTypes2.default.bool,\n\n  /** An image can appear centered in a content block. */\n  centered: _propTypes2.default.bool,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** An image may appear circular. */\n  circular: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** An image can show that it is disabled and cannot be selected. */\n  disabled: _propTypes2.default.bool,\n\n  /** Shorthand for Dimmer. */\n  dimmer: _lib.customPropTypes.itemShorthand,\n\n  /** An image can sit to the left or right of other content. */\n  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),\n\n  /** An image can take up the width of its container. */\n  fluid: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['size'])]),\n\n  /** The img element height attribute. */\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\n  /** An image can be hidden. */\n  hidden: _propTypes2.default.bool,\n\n  /** Renders the Image as an <a> tag with this href. */\n  href: _propTypes2.default.string,\n\n  /** An image may appear inline. */\n  inline: _propTypes2.default.bool,\n\n  /** Shorthand for Label. */\n  label: _lib.customPropTypes.itemShorthand,\n\n  /** An image may appear rounded. */\n  rounded: _propTypes2.default.bool,\n\n  /** An image may appear at different sizes. */\n  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),\n\n  /** An image can specify that it needs an additional spacing to separate it from nearby content. */\n  spaced: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right'])]),\n\n  /** Specifies the URL of the image. */\n  src: _propTypes2.default.string,\n\n  /** Whether or not to add the ui className. */\n  ui: _propTypes2.default.bool,\n\n  /** An image can specify its vertical alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** The img element width attribute. */\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */\n  wrapped: _propTypes2.default.bool\n} : {};\n\nImage.defaultProps = {\n  as: 'img',\n  ui: true\n};\n\nImage.create = (0, _lib.createShorthandFactory)(Image, function (value) {\n  return { src: value };\n});\n\nexports.default = Image;"},"hash":"06c356ee1679f0ca57511102034a63b1"}