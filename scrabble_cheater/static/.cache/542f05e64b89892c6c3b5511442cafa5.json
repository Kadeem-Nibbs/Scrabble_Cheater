{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"classnames","loc":{"line":11,"column":26}},{"name":"prop-types","loc":{"line":15,"column":25}},{"name":"react","loc":{"line":19,"column":21}},{"name":"../../lib","loc":{"line":23,"column":19}},{"name":"./AccordionAccordion","loc":{"line":25,"column":34}},{"name":"./AccordionContent","loc":{"line":29,"column":32}},{"name":"./AccordionTitle","loc":{"line":33,"column":30}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _AccordionAccordion = require('./AccordionAccordion');\n\nvar _AccordionAccordion2 = _interopRequireDefault(_AccordionAccordion);\n\nvar _AccordionContent = require('./AccordionContent');\n\nvar _AccordionContent2 = _interopRequireDefault(_AccordionContent);\n\nvar _AccordionTitle = require('./AccordionTitle');\n\nvar _AccordionTitle2 = _interopRequireDefault(_AccordionTitle);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * An accordion allows users to toggle the display of sections of content.\n */\nfunction Accordion(props) {\n  var className = props.className,\n      fluid = props.fluid,\n      inverted = props.inverted,\n      styled = props.styled;\n\n  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(styled, 'styled'), className);\n  var rest = (0, _lib.getUnhandledProps)(Accordion, props);\n\n  return _react2.default.createElement(_AccordionAccordion2.default, (0, _extends3.default)({}, rest, { className: classes }));\n}\n\nAccordion.handledProps = ['className', 'fluid', 'inverted', 'styled'];\nAccordion._meta = {\n  name: 'Accordion',\n  type: _lib.META.TYPES.MODULE\n};\n\nAccordion.propTypes = \"development\" !== \"production\" ? {\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Format to take up the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** Format for dark backgrounds. */\n  inverted: _propTypes2.default.bool,\n\n  /** Adds some basic styling to accordion panels. */\n  styled: _propTypes2.default.bool\n} : {};\n\nAccordion.Accordion = _AccordionAccordion2.default;\nAccordion.Content = _AccordionContent2.default;\nAccordion.Title = _AccordionTitle2.default;\n\nexports.default = Accordion;"},"hash":"559008c5deaa07d4df1e14317e5db1d9"}