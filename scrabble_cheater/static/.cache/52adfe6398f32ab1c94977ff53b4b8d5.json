{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"classnames","loc":{"line":13,"column":26}},{"name":"prop-types","loc":{"line":17,"column":25}},{"name":"react","loc":{"line":21,"column":21}},{"name":"../../lib","loc":{"line":25,"column":19}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = PopupHeader;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A PopupHeader displays a header in a Popover.\n */\nfunction PopupHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n\n  var classes = (0, _classnames2.default)('header', className);\n  var rest = (0, _lib.getUnhandledProps)(PopupHeader, props);\n  var ElementType = (0, _lib.getElementType)(PopupHeader, props);\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), _lib.childrenUtils.isNil(children) ? content : children);\n}\n\nPopupHeader.handledProps = ['as', 'children', 'className', 'content'];\nPopupHeader.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand\n} : {};\n\nPopupHeader._meta = {\n  name: 'PopupHeader',\n  type: _lib.META.TYPES.MODULE,\n  parent: 'Popup'\n};\n\nPopupHeader.create = (0, _lib.createShorthandFactory)(PopupHeader, function (children) {\n  return { children: children };\n});"},"hash":"3253ec66c5e5baf306c99b739ca45476"}