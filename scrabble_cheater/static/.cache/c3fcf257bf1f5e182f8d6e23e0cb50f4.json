{"dependencies":[{"name":"./_ListCache","loc":{"line":1,"column":24}},{"name":"./_stackClear","loc":{"line":2,"column":25}},{"name":"./_stackDelete","loc":{"line":3,"column":26}},{"name":"./_stackGet","loc":{"line":4,"column":23}},{"name":"./_stackHas","loc":{"line":5,"column":23}},{"name":"./_stackSet","loc":{"line":6,"column":23}}],"generated":{"js":"var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n"},"hash":"d33f6c36eb1aa164fda1ff44522d8d8e"}