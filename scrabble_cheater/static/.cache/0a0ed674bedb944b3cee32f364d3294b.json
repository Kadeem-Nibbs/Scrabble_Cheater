{"dependencies":[{"name":"lodash/isEqual","loc":{"line":7,"column":24}},{"name":"lodash/has","loc":{"line":11,"column":20}},{"name":"lodash/transform","loc":{"line":15,"column":26}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isEqual2 = require('lodash/isEqual');\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _has2 = require('lodash/has');\n\nvar _has3 = _interopRequireDefault(_has2);\n\nvar _transform2 = require('lodash/transform');\n\nvar _transform3 = _interopRequireDefault(_transform2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Naive and inefficient object difference, intended for development / debugging use only.\n * Deleted keys are shown as [DELETED].\n * @param {{}} source The source object\n * @param {{}} target The target object.\n * @returns {{}} A new object containing new/modified/deleted keys.\n * @example\n * import { objectDiff } from 'src/lib'\n *\n * const a = { key: 'val', foo: 'bar' }\n * const b = { key: 'val', foo: 'baz' }\n *\n * objectDiff(a, b)\n * //=> { foo: 'baz' }\n */\nexports.default = function (source, target) {\n  return (0, _transform3.default)(source, function (res, val, key) {\n    // deleted keys\n    if (!(0, _has3.default)(target, key)) res[key] = '[DELETED]';\n    // new keys / changed values\n    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code\n    else if (!(0, _isEqual3.default)(val, target[key])) res[key] = target[key];\n  }, {});\n};"},"hash":"aaeaa3fe35d54555b7438756ce449866"}