{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":11,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":15,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":19,"column":42}},{"name":"babel-runtime/helpers/inherits","loc":{"line":23,"column":25}},{"name":"lodash/isNil","loc":{"line":27,"column":22}},{"name":"lodash/without","loc":{"line":31,"column":24}},{"name":"classnames","loc":{"line":35,"column":26}},{"name":"prop-types","loc":{"line":39,"column":25}},{"name":"react","loc":{"line":43,"column":21}},{"name":"../../lib","loc":{"line":47,"column":19}},{"name":"../../elements/Icon","loc":{"line":49,"column":20}},{"name":"./MessageContent","loc":{"line":53,"column":30}},{"name":"./MessageHeader","loc":{"line":57,"column":29}},{"name":"./MessageList","loc":{"line":61,"column":27}},{"name":"./MessageItem","loc":{"line":65,"column":27}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Icon = require('../../elements/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _MessageContent = require('./MessageContent');\n\nvar _MessageContent2 = _interopRequireDefault(_MessageContent);\n\nvar _MessageHeader = require('./MessageHeader');\n\nvar _MessageHeader2 = _interopRequireDefault(_MessageHeader);\n\nvar _MessageList = require('./MessageList');\n\nvar _MessageList2 = _interopRequireDefault(_MessageList);\n\nvar _MessageItem = require('./MessageItem');\n\nvar _MessageItem2 = _interopRequireDefault(_MessageItem);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\nvar Message = function (_Component) {\n  (0, _inherits3.default)(Message, _Component);\n\n  function Message() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Message);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.handleDismiss = function (e) {\n      var onDismiss = _this.props.onDismiss;\n\n      if (onDismiss) onDismiss(e, _this.props);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Message, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          attached = _props.attached,\n          children = _props.children,\n          className = _props.className,\n          color = _props.color,\n          compact = _props.compact,\n          content = _props.content,\n          error = _props.error,\n          floating = _props.floating,\n          header = _props.header,\n          hidden = _props.hidden,\n          icon = _props.icon,\n          info = _props.info,\n          list = _props.list,\n          negative = _props.negative,\n          onDismiss = _props.onDismiss,\n          positive = _props.positive,\n          size = _props.size,\n          success = _props.success,\n          visible = _props.visible,\n          warning = _props.warning;\n\n      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(info, 'info'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), 'message', className);\n\n      var dismissIcon = onDismiss && _react2.default.createElement(_Icon2.default, { name: 'close', onClick: this.handleDismiss });\n      var rest = (0, _lib.getUnhandledProps)(Message, this.props);\n      var ElementType = (0, _lib.getElementType)(Message, this.props);\n\n      if (!_lib.childrenUtils.isNil(children)) {\n        return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), dismissIcon, children);\n      }\n\n      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), dismissIcon, _Icon2.default.create(icon), (!(0, _isNil3.default)(header) || !(0, _isNil3.default)(content) || !(0, _isNil3.default)(list)) && _react2.default.createElement(_MessageContent2.default, null, _MessageHeader2.default.create(header), _MessageList2.default.create(list), (0, _lib.createHTMLParagraph)(content)));\n    }\n  }]);\n  return Message;\n}(_react.Component);\n\nMessage._meta = {\n  name: 'Message',\n  type: _lib.META.TYPES.COLLECTION\n};\nMessage.Content = _MessageContent2.default;\nMessage.Header = _MessageHeader2.default;\nMessage.List = _MessageList2.default;\nMessage.Item = _MessageItem2.default;\nMessage.handledProps = ['as', 'attached', 'children', 'className', 'color', 'compact', 'content', 'error', 'floating', 'header', 'hidden', 'icon', 'info', 'list', 'negative', 'onDismiss', 'positive', 'size', 'success', 'visible', 'warning'];\nexports.default = Message;\nMessage.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A message can be formatted to be different colors. */\n  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: _propTypes2.default.bool,\n\n  /** Shorthand for primary content. */\n  content: _lib.customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: _propTypes2.default.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: _propTypes2.default.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: _lib.customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: _propTypes2.default.bool,\n\n  /** A message can contain an icon. */\n  icon: _propTypes2.default.oneOfType([_lib.customPropTypes.itemShorthand, _propTypes2.default.bool]),\n\n  /** A message may be formatted to display information. */\n  info: _propTypes2.default.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: _lib.customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: _propTypes2.default.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: _propTypes2.default.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: _propTypes2.default.bool,\n\n  /** A message can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: _propTypes2.default.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: _propTypes2.default.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: _propTypes2.default.bool\n} : {};"},"hash":"b81ec282402cac5fb2e209208d06bce1"}