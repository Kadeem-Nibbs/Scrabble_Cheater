{"dependencies":[{"name":"./isBrowser","loc":{"line":8,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debug = exports.makeDebugger = undefined;\n\nvar _isBrowser = require('./isBrowser');\n\nvar _isBrowser2 = _interopRequireDefault(_isBrowser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nif ((0, _isBrowser2.default)() && \"development\" !== 'production' && \"development\" !== 'test') {\n  // Heads Up!\n  // https://github.com/visionmedia/debug/pull/331\n  //\n  // debug now clears storage on load, grab the debug settings before require('debug').\n  // We try/catch here as Safari throws on localStorage access in private mode or with cookies disabled.\n  var DEBUG = void 0;\n  try {\n    DEBUG = window.localStorage.debug;\n  } catch (e) {\n    /* eslint-disable no-console */\n    console.error('Semantic-UI-React could not enable debug.');\n    console.error(e);\n    /* eslint-enable no-console */\n  }\n\n  // enable what ever settings we got from storage\n}\n\n/**\n * Create a namespaced debug function.\n * @param {String} namespace Usually a component name.\n * @example\n * import { makeDebugger } from 'src/lib'\n * const debug = makeDebugger('namespace')\n *\n * debug('Some message')\n * @returns {Function}\n */\nvar makeDebugger = exports.makeDebugger = function makeDebugger(namespace) {};\n\n/**\n * Default debugger, simple log.\n * @example\n * import { debug } from 'src/lib'\n * debug('Some message')\n */\nvar debug = exports.debug = makeDebugger('log');"},"hash":"c45d40097b059538543267c9f255dd7b"}