{"dependencies":[{"name":"./_arrayMap","loc":{"line":1,"column":23}},{"name":"./_copyArray","loc":{"line":2,"column":24}},{"name":"./isArray","loc":{"line":3,"column":22}},{"name":"./isSymbol","loc":{"line":4,"column":23}},{"name":"./_stringToPath","loc":{"line":5,"column":27}},{"name":"./_toKey","loc":{"line":6,"column":20}},{"name":"./toString","loc":{"line":7,"column":23}}],"generated":{"js":"var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n"},"hash":"dda28d35530c6ffdba3708098f43c657"}