{"dependencies":[{"name":"babel-runtime/helpers/slicedToArray","loc":{"line":7,"column":30}},{"name":"babel-runtime/helpers/objectWithoutProperties","loc":{"line":11,"column":40}},{"name":"babel-runtime/helpers/extends","loc":{"line":15,"column":24}},{"name":"babel-runtime/helpers/classCallCheck","loc":{"line":19,"column":31}},{"name":"babel-runtime/helpers/createClass","loc":{"line":23,"column":28}},{"name":"babel-runtime/helpers/possibleConstructorReturn","loc":{"line":27,"column":42}},{"name":"babel-runtime/helpers/get","loc":{"line":31,"column":20}},{"name":"babel-runtime/helpers/inherits","loc":{"line":35,"column":25}},{"name":"lodash/isEmpty","loc":{"line":39,"column":24}},{"name":"lodash/partialRight","loc":{"line":43,"column":29}},{"name":"lodash/inRange","loc":{"line":47,"column":24}},{"name":"lodash/map","loc":{"line":51,"column":20}},{"name":"lodash/get","loc":{"line":55,"column":20}},{"name":"lodash/reduce","loc":{"line":59,"column":23}},{"name":"lodash/invoke","loc":{"line":63,"column":23}},{"name":"lodash/without","loc":{"line":67,"column":24}},{"name":"classnames","loc":{"line":71,"column":26}},{"name":"prop-types","loc":{"line":75,"column":25}},{"name":"react","loc":{"line":79,"column":21}},{"name":"../../lib","loc":{"line":83,"column":19}},{"name":"../../elements/Input","loc":{"line":85,"column":21}},{"name":"./SearchCategory","loc":{"line":89,"column":30}},{"name":"./SearchResult","loc":{"line":93,"column":28}},{"name":"./SearchResults","loc":{"line":97,"column":29}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get3 = require('babel-runtime/helpers/get');\n\nvar _get4 = _interopRequireDefault(_get3);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _isEmpty2 = require('lodash/isEmpty');\n\nvar _isEmpty3 = _interopRequireDefault(_isEmpty2);\n\nvar _partialRight2 = require('lodash/partialRight');\n\nvar _partialRight3 = _interopRequireDefault(_partialRight2);\n\nvar _inRange2 = require('lodash/inRange');\n\nvar _inRange3 = _interopRequireDefault(_inRange2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _get5 = require('lodash/get');\n\nvar _get6 = _interopRequireDefault(_get5);\n\nvar _reduce2 = require('lodash/reduce');\n\nvar _reduce3 = _interopRequireDefault(_reduce2);\n\nvar _invoke2 = require('lodash/invoke');\n\nvar _invoke3 = _interopRequireDefault(_invoke2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _Input = require('../../elements/Input');\n\nvar _Input2 = _interopRequireDefault(_Input);\n\nvar _SearchCategory = require('./SearchCategory');\n\nvar _SearchCategory2 = _interopRequireDefault(_SearchCategory);\n\nvar _SearchResult = require('./SearchResult');\n\nvar _SearchResult2 = _interopRequireDefault(_SearchResult);\n\nvar _SearchResults = require('./SearchResults');\n\nvar _SearchResults2 = _interopRequireDefault(_SearchResults);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A search module allows a user to query for results from a selection of data\n */\nvar Search = function (_Component) {\n  (0, _inherits3.default)(Search, _Component);\n\n  function Search() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Search);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Search.__proto__ || Object.getPrototypeOf(Search)).call.apply(_ref, [this].concat(args))), _this), _this.handleResultSelect = function (e, result) {\n\n      (0, _invoke3.default)(_this.props, 'onResultSelect', e, (0, _extends3.default)({}, _this.props, { result: result }));\n    }, _this.handleSelectionChange = function (e) {\n\n      var result = _this.getSelectedResult();\n      (0, _invoke3.default)(_this.props, 'onSelectionChange', e, (0, _extends3.default)({}, _this.props, { result: result }));\n    }, _this.closeOnEscape = function (e) {\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;\n      e.preventDefault();\n      _this.close();\n    }, _this.moveSelectionOnKeyDown = function (e) {\n      switch (_lib.keyboardKey.getCode(e)) {\n        case _lib.keyboardKey.ArrowDown:\n          e.preventDefault();\n          _this.moveSelectionBy(e, 1);\n          break;\n        case _lib.keyboardKey.ArrowUp:\n          e.preventDefault();\n          _this.moveSelectionBy(e, -1);\n          break;\n        default:\n          break;\n      }\n    }, _this.selectItemOnEnter = function (e) {\n      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;\n\n      var result = _this.getSelectedResult();\n\n      // prevent selecting null if there was no selected item value\n      if (!result) return;\n\n      e.preventDefault();\n\n      // notify the onResultSelect prop that the user is trying to change value\n      _this.setValue(result.title);\n      _this.handleResultSelect(e, result);\n      _this.close();\n    }, _this.closeOnDocumentClick = function (e) {\n      _this.close();\n    }, _this.handleMouseDown = function (e) {\n\n      _this.isMouseDown = true;\n      (0, _invoke3.default)(_this.props, 'onMouseDown', e, _this.props);\n      _lib.eventStack.sub('mouseup', _this.handleDocumentMouseUp);\n    }, _this.handleDocumentMouseUp = function () {\n\n      _this.isMouseDown = false;\n      _lib.eventStack.unsub('mouseup', _this.handleDocumentMouseUp);\n    }, _this.handleInputClick = function (e) {\n\n      // prevent closeOnDocumentClick()\n      e.nativeEvent.stopImmediatePropagation();\n\n      _this.tryOpen();\n    }, _this.handleItemClick = function (e, _ref2) {\n      var id = _ref2.id;\n\n      var result = _this.getSelectedResult(id);\n\n      // prevent closeOnDocumentClick()\n      e.nativeEvent.stopImmediatePropagation();\n\n      // notify the onResultSelect prop that the user is trying to change value\n      _this.setValue(result.title);\n      _this.handleResultSelect(e, result);\n      _this.close();\n    }, _this.handleFocus = function (e) {\n      var onFocus = _this.props.onFocus;\n\n      if (onFocus) onFocus(e, _this.props);\n      _this.setState({ focus: true });\n    }, _this.handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n\n      if (onBlur) onBlur(e, _this.props);\n      _this.setState({ focus: false });\n    }, _this.handleSearchChange = function (e) {\n      // prevent propagating to this.props.onChange()\n      e.stopPropagation();\n      var minCharacters = _this.props.minCharacters;\n      var open = _this.state.open;\n\n      var newQuery = e.target.value;\n\n      (0, _invoke3.default)(_this.props, 'onSearchChange', e, (0, _extends3.default)({}, _this.props, { value: newQuery }));\n\n      // open search dropdown on search query\n      if (newQuery.length < minCharacters) {\n        _this.close();\n      } else if (!open) {\n        _this.tryOpen(newQuery);\n      }\n\n      _this.setValue(newQuery);\n    }, _this.getFlattenedResults = function () {\n      var _this$props = _this.props,\n          category = _this$props.category,\n          results = _this$props.results;\n\n      return !category ? results : (0, _reduce3.default)(results, function (memo, categoryData) {\n        return memo.concat(categoryData.results);\n      }, []);\n    }, _this.getSelectedResult = function () {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.selectedIndex;\n\n      var results = _this.getFlattenedResults();\n      return (0, _get6.default)(results, index);\n    }, _this.setValue = function (value) {\n      var selectFirstResult = _this.props.selectFirstResult;\n\n      _this.trySetState({ value: value }, { selectedIndex: selectFirstResult ? 0 : -1 });\n    }, _this.moveSelectionBy = function (e, offset) {\n      var selectedIndex = _this.state.selectedIndex;\n\n      var results = _this.getFlattenedResults();\n      var lastIndex = results.length - 1;\n\n      // next is after last, wrap to beginning\n      // next is before first, wrap to end\n      var nextIndex = selectedIndex + offset;\n      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;\n\n      _this.setState({ selectedIndex: nextIndex });\n      _this.scrollSelectedItemIntoView();\n      _this.handleSelectionChange(e);\n    }, _this.scrollSelectedItemIntoView = function () {\n      // Do not access document when server side rendering\n      if (!(0, _lib.isBrowser)()) return;\n      var menu = document.querySelector('.ui.search.active.visible .results.visible');\n      var item = menu.querySelector('.result.active');\n      if (!item) return;\n\n      var isOutOfUpperView = item.offsetTop < menu.scrollTop;\n      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;\n\n      if (isOutOfUpperView) {\n        menu.scrollTop = item.offsetTop;\n      } else if (isOutOfLowerView) {\n        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;\n      }\n    }, _this.tryOpen = function () {\n      var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;\n      var minCharacters = _this.props.minCharacters;\n\n      if (currentValue.length < minCharacters) return;\n\n      _this.open();\n    }, _this.open = function () {\n      _this.trySetState({ open: true });\n    }, _this.close = function () {\n      _this.trySetState({ open: false });\n    }, _this.renderSearchInput = function (rest) {\n      var _this$props2 = _this.props,\n          icon = _this$props2.icon,\n          input = _this$props2.input;\n      var value = _this.state.value;\n\n      return _Input2.default.create(input, { defaultProps: (0, _extends3.default)({}, rest, {\n          icon: icon,\n          input: { className: 'prompt', tabIndex: '0', autoComplete: 'off' },\n          onChange: _this.handleSearchChange,\n          onClick: _this.handleInputClick,\n          value: value\n        }) });\n    }, _this.renderNoResults = function () {\n      var _this$props3 = _this.props,\n          noResultsDescription = _this$props3.noResultsDescription,\n          noResultsMessage = _this$props3.noResultsMessage;\n\n      return _react2.default.createElement('div', { className: 'message empty' }, _react2.default.createElement('div', { className: 'header' }, noResultsMessage), noResultsDescription && _react2.default.createElement('div', { className: 'description' }, noResultsDescription));\n    }, _this.renderResult = function (_ref3, index, _array) {\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var childKey = _ref3.childKey,\n          result = (0, _objectWithoutProperties3.default)(_ref3, ['childKey']);\n      var resultRenderer = _this.props.resultRenderer;\n      var selectedIndex = _this.state.selectedIndex;\n\n      var offsetIndex = index + offset;\n\n      return _react2.default.createElement(_SearchResult2.default, (0, _extends3.default)({\n        key: childKey || result.title,\n        active: selectedIndex === offsetIndex,\n        onClick: _this.handleItemClick,\n        renderer: resultRenderer\n      }, result, {\n        id: offsetIndex // Used to lookup the result on item click\n      }));\n    }, _this.renderResults = function () {\n      var results = _this.props.results;\n\n      return (0, _map3.default)(results, _this.renderResult);\n    }, _this.renderCategories = function () {\n      var _this$props4 = _this.props,\n          categoryRenderer = _this$props4.categoryRenderer,\n          categories = _this$props4.results;\n      var selectedIndex = _this.state.selectedIndex;\n\n      var count = 0;\n\n      return (0, _map3.default)(categories, function (_ref4) {\n        var childKey = _ref4.childKey,\n            category = (0, _objectWithoutProperties3.default)(_ref4, ['childKey']);\n\n        var categoryProps = (0, _extends3.default)({\n          key: childKey || category.name,\n          active: (0, _inRange3.default)(selectedIndex, count, count + category.results.length),\n          renderer: categoryRenderer\n        }, category);\n        var renderFn = (0, _partialRight3.default)(_this.renderResult, count);\n\n        count += category.results.length;\n\n        return _react2.default.createElement(_SearchCategory2.default, categoryProps, category.results.map(renderFn));\n      });\n    }, _this.renderMenuContent = function () {\n      var _this$props5 = _this.props,\n          category = _this$props5.category,\n          showNoResults = _this$props5.showNoResults,\n          results = _this$props5.results;\n\n      if ((0, _isEmpty3.default)(results)) {\n        return showNoResults ? _this.renderNoResults() : null;\n      }\n\n      return category ? _this.renderCategories() : _this.renderResults();\n    }, _this.renderResultsMenu = function () {\n      var open = _this.state.open;\n\n      var resultsClasses = open ? 'visible' : '';\n      var menuContent = _this.renderMenuContent();\n\n      if (!menuContent) return;\n\n      return _react2.default.createElement(_SearchResults2.default, { className: resultsClasses }, menuContent);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Search, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var _state = this.state,\n          open = _state.open,\n          value = _state.value;\n\n      this.setValue(value);\n      if (open) this.open();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      (0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillReceiveProps', this).call(this, nextProps);\n\n      if (!(0, _lib.shallowEqual)(nextProps.value, this.props.value)) {\n        this.setValue(nextProps.value);\n      }\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !(0, _lib.shallowEqual)(nextProps, this.props) || !(0, _lib.shallowEqual)(nextState, this.state);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n\n      // focused / blurred\n      // eslint-disable-line complexity\n      if (!prevState.focus && this.state.focus) {\n        if (!this.isMouseDown) {\n          this.tryOpen();\n        }\n        if (this.state.open) {\n          _lib.eventStack.sub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);\n        }\n      } else if (prevState.focus && !this.state.focus) {\n        if (!this.isMouseDown) {\n          this.close();\n        }\n        _lib.eventStack.unsub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);\n      }\n\n      // opened / closed\n      if (!prevState.open && this.state.open) {\n        this.open();\n        _lib.eventStack.sub('click', this.closeOnDocumentClick);\n        _lib.eventStack.sub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);\n      } else if (prevState.open && !this.state.open) {\n        this.close();\n        _lib.eventStack.unsub('click', this.closeOnDocumentClick);\n        _lib.eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n\n      _lib.eventStack.unsub('click', this.closeOnDocumentClick);\n      _lib.eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);\n    }\n\n    // ----------------------------------------\n    // Document Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Component Event Handlers\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Getters\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Setters\n    // ----------------------------------------\n\n    // ----------------------------------------\n    // Behavior\n    // ----------------------------------------\n\n    // Open if the current value is greater than the minCharacters prop\n\n\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n\n    /**\n     * Offset is needed for determining the active item for results within a\n     * category. Since the index is reset to 0 for each new category, an offset\n     * must be passed in.\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state2 = this.state,\n          searchClasses = _state2.searchClasses,\n          focus = _state2.focus,\n          open = _state2.open;\n      var _props = this.props,\n          aligned = _props.aligned,\n          category = _props.category,\n          className = _props.className,\n          fluid = _props.fluid,\n          loading = _props.loading,\n          size = _props.size;\n\n      // Classes\n\n      var classes = (0, _classnames2.default)('ui', open && 'active visible', size, searchClasses, (0, _lib.useKeyOnly)(category, 'category'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(aligned, 'aligned'), 'search', className);\n      var unhandled = (0, _lib.getUnhandledProps)(Search, this.props);\n      var ElementType = (0, _lib.getElementType)(Search, this.props);\n\n      var _partitionHTMLInputPr = (0, _lib.partitionHTMLInputProps)(unhandled, {\n        htmlProps: _lib.htmlInputAttrs\n      }),\n          _partitionHTMLInputPr2 = (0, _slicedToArray3.default)(_partitionHTMLInputPr, 2),\n          htmlInputProps = _partitionHTMLInputPr2[0],\n          rest = _partitionHTMLInputPr2[1];\n\n      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, {\n        className: classes,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onMouseDown: this.handleMouseDown\n      }), this.renderSearchInput(htmlInputProps), this.renderResultsMenu());\n    }\n  }]);\n  return Search;\n}(_lib.AutoControlledComponent);\n\nSearch.defaultProps = {\n  icon: 'search',\n  input: 'text',\n  minCharacters: 1,\n  noResultsMessage: 'No results found.',\n  showNoResults: true\n};\nSearch.autoControlledProps = ['open', 'value'];\nSearch._meta = {\n  name: 'Search',\n  type: _lib.META.TYPES.MODULE\n};\nSearch.Category = _SearchCategory2.default;\nSearch.Result = _SearchResult2.default;\nSearch.Results = _SearchResults2.default;\nSearch.handledProps = ['aligned', 'as', 'category', 'categoryRenderer', 'className', 'defaultOpen', 'defaultValue', 'fluid', 'icon', 'input', 'loading', 'minCharacters', 'noResultsDescription', 'noResultsMessage', 'onBlur', 'onFocus', 'onMouseDown', 'onResultSelect', 'onSearchChange', 'onSelectionChange', 'open', 'resultRenderer', 'results', 'selectFirstResult', 'showNoResults', 'size', 'value'];\nexports.default = Search;\nSearch.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  // ------------------------------------\n  // Behavior\n  // ------------------------------------\n\n  /** Initial value of open. */\n  defaultOpen: _propTypes2.default.bool,\n\n  /** Initial value. */\n  defaultValue: _propTypes2.default.string,\n\n  /** Shorthand for Icon. */\n  icon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),\n\n  /** Minimum characters to query for results */\n  minCharacters: _propTypes2.default.number,\n\n  /** Additional text for \"No Results\" message with less emphasis. */\n  noResultsDescription: _propTypes2.default.node,\n\n  /** Message to display when there are no results. */\n  noResultsMessage: _propTypes2.default.node,\n\n  /** Controls whether or not the results menu is displayed. */\n  open: _propTypes2.default.bool,\n\n  /**\n   * One of:\n   * - array of Search.Result props e.g. `{ title: '', description: '' }` or\n   * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`\n   */\n  results: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.shape(_SearchResult2.default.propTypes)), _propTypes2.default.object]),\n\n  /** Whether the search should automatically select the first result after searching. */\n  selectFirstResult: _propTypes2.default.bool,\n\n  /** Whether a \"no results\" message should be shown if no results are found. */\n  showNoResults: _propTypes2.default.bool,\n\n  /** Current value of the search input. Creates a controlled component. */\n  value: _propTypes2.default.string,\n\n  // ------------------------------------\n  // Rendering\n  // ------------------------------------\n\n  /**\n   * Renders the SearchCategory contents.\n   *\n   * @param {object} props - The SearchCategory props object.\n   * @returns {*} - Renderable SearchCategory contents.\n   */\n  categoryRenderer: _propTypes2.default.func,\n\n  /**\n   * Renders the SearchResult contents.\n   *\n   * @param {object} props - The SearchResult props object.\n   * @returns {*} - Renderable SearchResult contents.\n   */\n  resultRenderer: _propTypes2.default.func,\n\n  // ------------------------------------\n  // Callbacks\n  // ------------------------------------\n\n  /**\n   * Called on blur.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onBlur: _propTypes2.default.func,\n\n  /**\n   * Called on focus.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onFocus: _propTypes2.default.func,\n\n  /**\n   * Called on mousedown.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onMouseDown: _propTypes2.default.func,\n\n  /**\n   * Called when a result is selected.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onResultSelect: _propTypes2.default.func,\n\n  /**\n   * Called on search input change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props, includes current value of search input.\n   */\n  onSearchChange: _propTypes2.default.func,\n\n  /**\n   * Called when the active selection index is changed.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onSelectionChange: _propTypes2.default.func,\n\n  // ------------------------------------\n  // Style\n  // ------------------------------------\n\n  /** A search can have its results aligned to its left or right container edge. */\n  aligned: _propTypes2.default.string,\n\n  /** A search can display results from remote content ordered by categories. */\n  category: _propTypes2.default.bool,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A search can have its results take up the width of its container. */\n  fluid: _propTypes2.default.bool,\n\n  /** A search input can take up the width of its container. */\n  input: _lib.customPropTypes.itemShorthand,\n\n  /** A search can show a loading indicator. */\n  loading: _propTypes2.default.bool,\n\n  /** A search can have different sizes. */\n  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))\n} : {};"},"hash":"b55b38131ff7d356cb6c9cb6cfae80e7"}