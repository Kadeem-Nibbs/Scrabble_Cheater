{"dependencies":[{"name":"babel-runtime/helpers/extends","loc":{"line":7,"column":24}},{"name":"lodash/without","loc":{"line":11,"column":24}},{"name":"lodash/map","loc":{"line":15,"column":20}},{"name":"classnames","loc":{"line":19,"column":26}},{"name":"prop-types","loc":{"line":23,"column":25}},{"name":"react","loc":{"line":27,"column":21}},{"name":"../../lib","loc":{"line":31,"column":19}},{"name":"./TableCell","loc":{"line":33,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _without2 = require('lodash/without');\n\nvar _without3 = _interopRequireDefault(_without2);\n\nvar _map2 = require('lodash/map');\n\nvar _map3 = _interopRequireDefault(_map2);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lib = require('../../lib');\n\nvar _TableCell = require('./TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n/**\n * A table can have rows.\n */\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n\n  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), className);\n  var rest = (0, _lib.getUnhandledProps)(TableRow, props);\n  var ElementType = (0, _lib.getElementType)(TableRow, props);\n\n  if (!_lib.childrenUtils.isNil(children)) {\n    return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), children);\n  }\n\n  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }), (0, _map3.default)(cells, function (cell) {\n    return _TableCell2.default.create(cell, { defaultProps: { as: cellAs } });\n  }));\n}\n\nTableRow.handledProps = ['active', 'as', 'cellAs', 'cells', 'children', 'className', 'disabled', 'error', 'negative', 'positive', 'textAlign', 'verticalAlign', 'warning'];\nTableRow._meta = {\n  name: 'TableRow',\n  type: _lib.META.TYPES.COLLECTION,\n  parent: 'Table'\n};\n\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\n\nTableRow.propTypes = \"development\" !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: _lib.customPropTypes.as,\n\n  /** A row can be active or selected by a user. */\n  active: _propTypes2.default.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: _lib.customPropTypes.as,\n\n  /** Shorthand array of props for TableCell. */\n  cells: _lib.customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: _propTypes2.default.node,\n\n  /** Additional classes. */\n  className: _propTypes2.default.string,\n\n  /** A row can be disabled. */\n  disabled: _propTypes2.default.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: _propTypes2.default.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: _propTypes2.default.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: _propTypes2.default.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: _propTypes2.default.bool\n} : {};\n\nTableRow.create = (0, _lib.createShorthandFactory)(TableRow, function (cells) {\n  return { cells: cells };\n});\n\nexports.default = TableRow;"},"hash":"f5b6537380a6bc9f298923e29fa8711e"}